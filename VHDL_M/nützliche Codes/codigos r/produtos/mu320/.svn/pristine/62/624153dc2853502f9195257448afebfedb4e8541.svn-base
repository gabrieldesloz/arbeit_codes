/*
 * This devicetree is generated by sopc2dts
 * Sopc2dts is written by Walter Goossens <waltergoossens@home.nl>
 * in cooperation with the nios2 community <Nios2-dev@sopc.et.ntust.edu.tw>
 */
/dts-v1/;

/ {
  model = "ALTR,mu320_cpu";
  compatible = "ALTR,mu320_cpu";
  #address-cells = < 1 >;
  #size-cells = < 1 >;

  cpus {
    #address-cells = < 1 >;
    #size-cells = < 0 >;

    cpu: cpu@0x0 {
      device_type = "cpu";
      compatible = "ALTR,nios2-12.1";
      reg = < 0x00000000 >;
      interrupt-controller;
      #interrupt-cells = < 1 >;
      clock-frequency = < 125000000 >;/* embeddedsw.CMacro.CPU_FREQ type NUMBER */
      dcache-line-size = < 32 >;/* embeddedsw.CMacro.DCACHE_LINE_SIZE type NUMBER */
      icache-line-size = < 32 >;/* embeddedsw.CMacro.ICACHE_LINE_SIZE type NUMBER */
      dcache-size = < 8192 >;/* embeddedsw.CMacro.DCACHE_SIZE type NUMBER */
      icache-size = < 16384 >;/* embeddedsw.CMacro.ICACHE_SIZE type NUMBER */
      ALTR,implementation = "fast";/* embeddedsw.CMacro.CPU_IMPLEMENTATION type STRING*/
      ALTR,pid-num-bits = < 8 >;/* embeddedsw.CMacro.PROCESS_ID_NUM_BITS type NUMBER */
      ALTR,tlb-num-ways = < 16 >;/* embeddedsw.CMacro.TLB_NUM_WAYS type NUMBER */
      ALTR,tlb-num-entries = < 256 >;/* embeddedsw.CMacro.TLB_NUM_ENTRIES type NUMBER */
      ALTR,tlb-ptr-sz = < 8 >;/* embeddedsw.CMacro.TLB_PTR_SZ type NUMBER */
      ALTR,has-mul;/* embeddedsw.CMacro.HARDWARE_MULTIPLY_PRESENT type NUMBER*/
      ALTR,reset-addr = < 0xcc800000 >;/* embeddedsw.CMacro.RESET_ADDR type NUMBER */
      ALTR,fast-tlb-miss-addr = < 0xca001000 >;/* embeddedsw.CMacro.FAST_TLB_MISS_EXCEPTION_ADDR type NUMBER */
      ALTR,exception-addr = < 0xc0000020 >;/* embeddedsw.CMacro.EXCEPTION_ADDR type NUMBER */
    }; //end cpu@0x0 (cpu)
  }; //end cpus

  memory@0 {
  device_type = "memory";
  reg = < 0x00000000 0x08000000
          0x0A001000 0x00000400 >;
  }; //end memory@0

  sopc@0 {
    device_type = "soc";
    ranges;
    #address-cells = < 1 >;
    #size-cells = < 1 >;
    compatible = "ALTR,avalon", "simple-bus";
    bus-frequency = < 125000000 >;

    clock_crossing_eth_linux: bridge@0xb000000 {
      compatible = "ALTR,avalon-12.1", "simple-bus";
      reg = < 0x0B000000 0x00002000 >;
      #address-cells = < 1 >;
      #size-cells = < 1 >;
      ranges = <  0x00001400 0x0B001400 0x00000040
                  0x00001440 0x0B001440 0x00000040
                  0x00001000 0x0B001000 0x00000400
                  0x00000000 0x0B000000 0x00001000 >;

      tse_mac_linux: ethernet@0x1400 {
        compatible = "ALTR,tse-12.1", "ALTR,tse-1.0";
        reg = < 0x00001000 0x00000400
        0x00001400 0x00000040
        0x00001440 0x00000040
        0x00000000 0x00001000 >;
        interrupt-parent = < &cpu >;
        interrupts = < 9 8 >;
        ALTR,rx-fifo-depth = < 2048 >;/* embeddedsw.CMacro.RECEIVE_FIFO_DEPTH type NUMBER */
        ALTR,tx-fifo-depth = < 2048 >;/* embeddedsw.CMacro.TRANSMIT_FIFO_DEPTH type NUMBER */
        address-bits = < 48 >;
        max-frame-size = < 1518 >;
        local-mac-address = [ 00 00 00 00 00 00 ];
        phy-mode = "gmii";
        ALTR,mii-id = < 0 >;
      }; //end ethernet@0x1400 (tse_mac_linux)
    }; //end bridge@0xb000000 (clock_crossing_eth_linux)

    clock_crossing_cpu_eth: bridge@0x8000000 {
      compatible = "ALTR,avalon-12.1", "simple-bus";
      reg = < 0x08000000 0x00008000 >;
      #address-cells = < 1 >;
      #size-cells = < 1 >;
      ranges = <  0x00001000 0x08001000 0x00000400
                  0x00001C00 0x08001C00 0x00000040
                  0x00001C40 0x08001C40 0x00000040
                  0x00000000 0x08000000 0x00001000
                  0x00001400 0x08001400 0x00000400
                  0x00001800 0x08001800 0x00000400 >;

      tse_mac: ethernet@0x1000 {
        compatible = "ALTR,tse-12.1", "ALTR,tse-1.0";
        reg = < 0x00001000 0x00000400
                0x00001C40 0x00000040
                0x00001C00 0x00000040
                0x00000000 0x00001000 >;
        interrupt-parent = < &cpu >;
        interrupts = < 4 3 >;
        ALTR,rx-fifo-depth = < 2048 >;/* embeddedsw.CMacro.RECEIVE_FIFO_DEPTH type NUMBER */
        ALTR,tx-fifo-depth = < 2048 >;/* embeddedsw.CMacro.TRANSMIT_FIFO_DEPTH type NUMBER */
        address-bits = < 48 >;
        max-frame-size = < 1518 >;
        local-mac-address = [ 00 00 00 00 00 00 ];
        phy-mode = "gmii";
        ALTR,mii-id = < 1 >;
      }; //end ethernet@0x1000 (tse_mac)

      svio: svio@0x1400 {
        compatible = "svio";
        reg = < 0x00001400 0x00000400
                0x00001800 0x00000400 >;
      }; //end svio@0x1400 (svio)

    }; //end bridge@0x8000000 (clock_crossing_cpu_eth)

    clock_crossing_cpu_io: bridge@0x10000000 {
      compatible = "ALTR,avalon-12.1", "simple-bus";
      reg = < 0x10000000 0x00001000 >;
      #address-cells = < 1 >;
      #size-cells = < 1 >;
      ranges = <  0x00000000 0x10000000 0x00000800
                  0x00000900 0x10000900 0x00000020
                  0x00000920 0x10000920 0x00000008
                  0x00000928 0x10000928 0x00000008
                  0x00000800 0x10000800 0x00000100
                  0x00000930 0x10000930 0x00000010
                  0x00000940 0x10000940 0x00000020
                  0x00000960 0x10000960 0x00000010
                  0x00000970 0x10000970 0x00000010
                  0x00000980 0x10000980 0x00000020
                  0x000009A0 0x100009A0 0x00000010 >;

      epcs: spi@0x400 {
        compatible = "ALTR,spi-12.1", "ALTR,spi-1.0";
        reg = < 0x00000400 0x00000400 >;
        interrupt-parent = < &cpu >;
        interrupts = < 6 >;
        bank-width = < 2 >;
        device-width = < 1 >;
        #address-cells = < 1 >;
        #size-cells = < 0 >;

        m25p80@0 {
          #address-cells = <1>;
          #size-cells = <1>;
          compatible = "m25p80";
          spi-max-frequency = < 25000000 >;
          reg = < 0 >;
          sof-base@0x00 {
            label = "sof-base";
            reg = <0x00000000 0x0100000>;
          };
          config_reg@0x100000 {
            label = "config_reg";
            reg = <0x110000 0x0010000>;
          };
          sof-factory@0x150000 {
            label = "sof-factory";
            reg = <0x150000 0x250000>;
          };
          sof-app@0x400000 {
            label = "sof-app";
            reg = <0x400000 0x400000>;
          };
        }; //end m25p80@0
      }; //end spi@0x400 (epcs)

      timer: timer@0x900 {
        compatible = "ALTR,timer-12.1", "ALTR,timer-1.0";
        reg = < 0x00000900 0x00000020 >;
        interrupt-parent = < &cpu >;
        interrupts = < 1 >;
        clock-frequency = < 25000000 >;
      }; //end timer@0x900 (timer)

      jtag_uart: serial@0x920 {
        compatible = "ALTR,juart-12.1", "ALTR,juart-1.0";
        reg = < 0x00000920 0x00000008 >;
        interrupt-parent = < &cpu >;
        interrupts = < 31 >;
      }; //end serial@0x920 (jtag_uart)

      remote_update: altremote@0x800 {
        compatible = "ALTR,remote-12.1", "ALTR,remote-1.0";
        reg = < 0x00000800 0x00000100 >;
      }; //end altremote@0x800 (remote_update)

      pps: gpio@0x930 {
        compatible = "ALTR,pio-12.1", "ALTR,pio-1.0";
        reg = < 0x00000930 0x00000010 >;
        interrupt-parent = < &cpu >;
        interrupts = < 2 >;
        width = < 1 >;/* width type NUMBER */
        resetvalue = < 1 >;/* resetValue type NUMBER */
        #gpio-cells = < 2 >;
        gpio-controller;
      }; //end gpio@0x930 (pps)

      opencores_i2c_0: ocores@0x940 {
        compatible = "opencores,i2c-ocores";
        reg = < 0x00000940 0x00000020 >;
        interrupt-parent = < &cpu >;
        interrupts = < 7 >;
        regstep = < 4 >;
        clock-frequency = < 100000000 >;
        #address-cells = < 1 >;
        #size-cells = < 0 >;
        rtc@0x68 {
          compatible = "maxim,ds1374";
          reg = < 0x68 >;
        };
        eeprom0@0x50 {
          compatible = "24c02";
          reg = < 0x50 >;
        };
        eeprom1@0x51 {
          compatible = "24c02";
          reg = < 0x51 >;
        };
        eeprom2@0x52 {
          compatible = "24c02";
          reg = < 0x52 >;
        };
        eeprom3@0x53 {
          compatible = "24c02";
          reg = < 0x53 >;
        };
        eeprom4@0x54 {
          compatible = "24c02";
          reg = < 0x54 >;
        };
        eeprom5@0x55 {
          compatible = "24c02";
          reg = < 0x55 >;
        };
        eeprom6@0x56 {
          compatible = "24c02";
          reg = < 0x56 >;
        };
      }; //end unknown@0x940 (opencores_i2c_0)

      alarm_led_from_linux: gpio@0x960 {
        compatible = "ALTR,pio-12.1", "ALTR,pio-1.0";
        reg = < 0x00000960 0x00000010 >;
        width = < 1 >;/* width type NUMBER */
        resetvalue = < 0 >;/* resetValue type NUMBER */
        #gpio-cells = < 2 >;
        gpio-controller;
      }; //end gpio@0x960 (alarm_led_from_linux)

      link_eth: gpio@0x970 {
        compatible = "ALTR,pio-12.1", "ALTR,pio-1.0";
        reg = < 0x00000970 0x00000010 >;
        width = < 2 >;/* width type NUMBER */
        resetvalue = < 0 >;/* resetValue type NUMBER */
        #gpio-cells = < 2 >;
        gpio-controller;
      }; //end gpio@0x970 (link_eth)

      watchdog: watchdog@0x980 {
        compatible = "ALTR,wdt-12.1", "ALTR,wdt-1.0";
        reg = < 0x00000980 0x00000020 >;
        interrupt-parent = < &cpu >;
        interrupts = < 0 >;
        clock-frequency = < 25000000 >;
        timeout = < 24999999 >;/* embeddedsw.CMacro.LOAD_VALUE type NUMBER */
      }; //end watchdog@0x980 (watchdog)

      cpuio: cpuio@0x928 {
        compatible = "cpuio";
        reg = < 0x00000928 0x00000008 >;
      }; //end cpuio@0x928 (cpuio)

      relay_alarm_from_linux: gpio@0x9A0 {
        compatible = "ALTR,pio-12.1", "ALTR,pio-1.0";
        reg = < 0x000009A0 0x00000010 >;
        width = < 1 >;/* width type NUMBER */
        resetvalue = < 0 >;/* resetValue type NUMBER */
        #gpio-cells = < 2 >;
        gpio-controller;
      }; //end gpio@0x9A0 (relay_alarm_from_linux)

    }; //end bridge@0x10000000 (clock_crossing_cpu_io)

    clock_crossing_flash: bridge@0xc000000 {
      compatible = "ALTR,avalon-12.1", "simple-bus";
      reg = < 0x0C000000 0x02000000 >;
      #address-cells = < 1 >;
      #size-cells = < 1 >;
      ranges = < 0x00000000 0x0C000000 0x02000000 >;

      cfi_flash: flash@0x0 {
        compatible = "ALTR,cfi_flash-altera_generic_tristate_controller", "cfi-flash";
        reg = < 0x00000000 0x02000000 >;
        bank-width = < 1 >;
        device-width = < 1 >;
        #address-cells = <1>;
        #size-cells = <1>;
        kernel-factory@0x0 {
          label = "kernel-factory";
          reg = <0x0 0x800000>;
        };
        kernel-app@0x800000 {
          label = "kernel-app";
          reg = <0x800000 0xC00000>;
        };
        cfg-data@0x1400000 {
          label = "cfg-data";
          reg = <0x1400000 0x200000>;
        };
        log-data@0x1600000 {
          label = "log-data";
          reg = <0x1600000 0xA00000>;
        };

      }; //end flash@0x0 (cfi_flash)

    }; //end bridge@0xc000000 (clock_crossing_flash)

    clock_crossing_merging_unit: bridge@0x9000000 {
      compatible = "ALTR,avalon-12.1", "simple-bus";
      reg = < 0x09000000 0x00001000 >;
      #address-cells = < 1 >;
      #size-cells = < 1 >;
      ranges = <  0x000000E0 0x090000E0 0x00000020
                  0x00000040 0x09000040 0x00000040
                  0x00000020 0x09000020 0x00000008
                  0x00000080 0x09000080 0x00000040
                  0x00000100 0x09000100 0x00000080
                  0x00000030 0x09000030 0x00000010
                  0x00000028 0x09000028 0x00000008
                  0x00000000 0x09000000 0x00000010 >;

      irig_decode: irig@0x0 {
        compatible = "irig";
        reg = < 0x000000E0 0x00000020 >;
      }; //end irig@0x0 (irig_decode)

      muio: muio@0x20 {
        compatible = "muio";
        reg = < 0x00000020 0x00000008
                0x00000040 0x00000040
                0x00000080 0x00000040
                0x00000000 0x00000000
                0x00000000 0x00000010
                0x00000100 0x00000080
                0x00000030 0x0000000C
                0x0000003C 0x00000004
                0x00000028 0x00000008
                0x00000000 0x00000000
                0x00000000 0x00000000 >;
        interrupt-parent = < &cpu >;
        interrupts = < 5 10 >;
      }; //end muio@0x20 (gain_registers_0)

    }; //end bridge@0x9000000 (clock_crossing_merging_unit)

  }; //end sopc@0

  chosen {
    bootargs = "debug console=ttyAL0,115200";
  }; //end chosen

}; //end /
