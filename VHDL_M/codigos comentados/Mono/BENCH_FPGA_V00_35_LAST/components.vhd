-------------------------------------------------------------------------------
-- Title      : Components package (generated by Emacs VHDL Mode 3.33.6)
-- Project    : 
-------------------------------------------------------------------------------
-- File       : components.vhd
-- Author     :   <s10169@SMKM02>
-- Company    : 
-- Created    : 2014-09-03
-- Last update: 2014-09-03
-- Platform   : 
-- Standard   : VHDL'87
-------------------------------------------------------------------------------
-- Description: 
-------------------------------------------------------------------------------
-- Copyright (c) 2014 
-------------------------------------------------------------------------------
-- Revisions  :
-- Date        Version  Author  Description
-- 2014-09-03  1.0      s10169	Created
-------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;
use IEEE.std_logic_arith.all;
library UNISIM;
use UNISIM.vcomponents.all;
use work.my_types_pkg.all;

-------------------------------------------------------------------------------

package components is

  -----------------------------------------------------------------------------
  -- Component declarations
  -----------------------------------------------------------------------------

  component ALL_IN_BUFF
  end component;

  component CH_X_EJET_TIMER
    port (
      CH_NUM_i             : in  std_logic_vector (5 downto 0);
      LENGTH_BUFF_i        : in  std_logic_vector (191 downto 0);
      HAS_GRAIN_i          : in  std_logic_vector(63 downto 0);
      ACTIVE_i             : in  std_logic;
      PWM_i                : in  std_logic;
      PROTEC_VALVE_i       : in  std_logic;
      COUNT_i              : in  std_logic_vector (9 downto 0);
      DEF_CNT_i            : in  std_logic_vector (15 downto 0);
      LENGTH_MEM_i         : in  std_logic_vector(2 downto 0);
      RETRIGGER_ON_i       : in  std_logic;
      A_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      C18MHZ_i             : in  std_logic;
      C3KHZ_i              : in  std_logic;
      RST_i                : in  std_logic;
      PROBE_o              : out std_logic_vector (15 downto 0);
      CH_OUT_o             : out std_logic_vector (63 downto 0);
      LENGTH_MEM_o         : out std_logic_vector (2 downto 0);
      COUNT_o              : out std_logic_vector (9 downto 0);
      ACTIVE_o             : out std_logic;
      PWM_o                : out std_logic;
      DEF_CNT_o            : out std_logic_vector (15 downto 0);
      MAX_ACTIVE_COUNTER_o : out std_logic_vector (15 downto 0);
      PROTEC_VALVE_o       : out std_logic);
  end component;

  component EJ_CLEAR_COUNT
  end component;

  component EJECTORS_DATA_SENDER
  end component;

  component FLOOR_GEN
    port (
      FLOORX_i      : in  std_logic;
      RSYNC_i       : in  std_logic;
      LED_SEQ_i_0   : in  std_logic;
      RST_i         : in  std_logic;
      PROBE_o       : out std_logic_vector(7 downto 0);
      FLOOR_o       : out std_logic;
      BGND_OFF_o    : out std_logic;
      BGND_FLOOR_o  : out std_logic;
      ILLUM_FLOOR_o : out std_logic);
  end component;

  component IN_BUFF
  end component;

  component MAIN
    port (
      ADC1                                   : in    STD_LOGIC_VECTOR (7 downto 0);
      ADC1_OEB                               : out   STD_LOGIC;
      ADC1_CLK1                              : out   STD_LOGIC;
      ADC1_CLK2                              : out   STD_LOGIC;
      ADC1_CLK                               : out   STD_LOGIC;
      ADC1_SDATA                             : inout std_logic;
      ADC1_SCLK                              : inout std_logic;
      ADC1_SLOAD                             : inout std_logic;
      ADC2                                   : in    STD_LOGIC_VECTOR (7 downto 0);
      ADC2_OEB                               : out   STD_LOGIC;
      ADC2_CLK1                              : out   STD_LOGIC;
      ADC2_CLK2                              : out   STD_LOGIC;
      ADC2_CLK                               : out   STD_LOGIC;
      ADC2_SDATA                             : inout std_logic;
      ADC2_SCLK                              : inout std_logic;
      ADC2_SLOAD                             : inout std_logic;
      CCD_DIS1, CCD_DIS2, CCD_DIS3, CCD_DIS4 : out   std_logic;
      CCD_CLK1, CCD_CLK2, CCD_CLK3, CCD_CLK4 : out   std_logic;
      CCD_SI1, CCD_SI2, CCD_SI3, CCD_SI4     : out   std_logic;
      FLEDA                                  : out   std_logic;
      FLEDB                                  : out   std_logic;
      FLEDc                                  : out   std_logic;
      FLEDD                                  : out   std_logic;
      RLEDA                                  : out   std_logic;
      RLEDB                                  : out   std_logic;
      RLEDC                                  : out   std_logic;
      RLEDD                                  : out   std_logic;
      EN_BACK                                : out   std_logic;
      EJA_CK, EJA_TX                         : inout std_logic;
      EJA_RX                                 : in    std_logic;
      EJB_CK, EJB_TX                         : out   std_logic;
      EJB_RX                                 : in    std_logic;
      TSINC1, TSINC2                         : out   std_logic;
      RSINC1, RSINC2                         : in    std_logic;
      LED1, LED2                             : inout std_logic;
      CH1                                    : in    std_logic;
      CONF                                   : inout STD_LOGIC_VECTOR (7 downto 0);
      TEST                                   : inout STD_LOGIC_VECTOR (15 downto 0);
      CLK37                                  : in    std_logic;
      LED_RESET                              : in    std_logic;
      LDATA                                  : inout STD_LOGIC_VECTOR (15 downto 0);
      LADDR                                  : in    STD_LOGIC_VECTOR (4 downto 0);
      LCLKL                                  : in    std_logic;
      LFRAME                                 : in    std_logic;
      LWR                                    : in    std_logic;
      LRD                                    : in    std_logic;
      FPGA_RSTCOM                            : in    std_logic;
      FPGA_BUSYCOM                           : out   std_logic;
      L_RX                                   : out   std_logic;
      L_TX                                   : in    std_logic;
      L_IO                                   : inout std_logic_vector (1 downto 0);
      MDATA                                  : inout STD_LOGIC_VECTOR (15 downto 0);
      MADDR                                  : out   STD_LOGIC_VECTOR (17 downto 0);
      MOE                                    : out   std_logic;
      MCS                                    : out   std_logic;
      MWR                                    : out   std_logic;
      F_Q                                    : inout std_logic;
      F_C                                    : inout std_logic;
      F_D                                    : inout std_logic;
      F_S                                    : inout std_logic);
  end component;

  component MAIN_BOARD_DETECTION
    port (
      SYNC_IN_i     : in  STD_LOGIC;
      ILLUM_CYCLE_i : in  STD_LOGIC;
      RST_i         : in  STD_LOGIC;
      MAIN_BOARD_o  : out STD_LOGIC);
  end component;

  component MAIN_RESET
    port (
      CH1_i    : in  STD_LOGIC;
      CLKSEL_i : in  STD_LOGIC;
      RSYNC2_i : in  STD_LOGIC;
      C1US_i   : in  STD_LOGIC;
      RESET_o  : out STD_LOGIC);
  end component;

  component MAIN_RESET
    port (
      CH1_i    : in  STD_LOGIC;
      CLKSEL_i : in  STD_LOGIC;
      RSYNC2_i : in  STD_LOGIC;
      C1US_i   : in  STD_LOGIC;
      RESET_o  : out STD_LOGIC);
  end component;

  component MEAN_16K
    port (
      ACC_IN            : in  std_logic_vector(63 downto 0);
      PIX_i             : in  std_logic_vector (7 downto 0);
      POX_i             : in  std_logic_vector (7 downto 0);
      CANSUM_i          : in  std_logic;
      IS_TRANSLUC_i     : in  std_logic_vector(0 downto 0);
      IS_REFLECT_i      : in  std_logic_vector(0 downto 0);
      CLR_MEAN_A_i      : in  std_logic;
      CLR_MEAN_B_i      : in  std_logic;
      NDUMPF_i          : in  std_logic_vector(7 downto 0);
      EXTEVENT_FLAGF_i  : in  std_logic;
      EXTEVENTAG_FLAG_i : in  std_logic;
      READ_MEAN_i       : in  std_logic;
      RST_i             : in  std_logic;
      CLK_i             : in  std_logic;
      CLK_INV_i         : in  std_logic;
      CLR_MEAN_OFF_o    : out std_logic;
      ILLUM_A_o         : out std_logic_vector (63 downto 0);
      ILLUM_B_o         : out std_logic_vector (63 downto 0));
  end component;

  component MEM_CTRL
    port (
      PROTEC_VALVE_i      : in  std_logic;
      OVERUSAGE_CLR_A_i   : in  std_logic;
      OVERUSAGE_CLR_B_i   : in  std_logic;
      LENGTH_MEM_i        : in  std_logic_vector (2 downto 0);
      COUNT_i             : in  std_logic_vector (9 downto 0);
      ACTIVE_i            : in  std_logic;
      PWM_i               : in  std_logic;
      DEF_CNT_i           : in  std_logic_vector(15 downto 0);
      TEMPO_ESTATISTICA_i : in  std_logic_vector(2 downto 0);
      INT_CH_REQ_i        : in  std_logic_vector (5 downto 0);
      C18MHZ_i            : in  std_logic;
      C3KHZ_i             : in  std_logic;
      RST_i               : in  std_logic;
      LENGTH_MEM_o        : out std_logic_vector (2 downto 0);
      COUNT_o             : out std_logic_vector (9 downto 0);
      PWM_o               : out std_logic;
      ACTIVE_o            : out std_logic;
      PROTEC_VALVE_o      : out std_logic;
      PROBE_o             : out std_logic_vector(7 downto 0);
      DEF_CNT_o           : out std_logic_vector(15 downto 0);
      EJ_CNT_o            : out std_logic_vector(15 downto 0);
      OVERUSAGE_o         : out std_logic_vector(63 downto 0);
      CH_NUM_o            : out std_logic_vector (5 downto 0));
  end component;

  component MEM_CTRL
    port (
      PROTEC_VALVE_i      : in  std_logic;
      OVERUSAGE_CLR_A_i   : in  std_logic;
      OVERUSAGE_CLR_B_i   : in  std_logic;
      LENGTH_MEM_i        : in  std_logic_vector (2 downto 0);
      COUNT_i             : in  std_logic_vector (9 downto 0);
      ACTIVE_i            : in  std_logic;
      PWM_i               : in  std_logic;
      DEF_CNT_i           : in  std_logic_vector(15 downto 0);
      TEMPO_ESTATISTICA_i : in  std_logic_vector(2 downto 0);
      INT_CH_REQ_i        : in  std_logic_vector (5 downto 0);
      C18MHZ_i            : in  std_logic;
      C3KHZ_i             : in  std_logic;
      RST_i               : in  std_logic;
      LENGTH_MEM_o        : out std_logic_vector (2 downto 0);
      COUNT_o             : out std_logic_vector (9 downto 0);
      PWM_o               : out std_logic;
      ACTIVE_o            : out std_logic;
      PROTEC_VALVE_o      : out std_logic;
      PROBE_o             : out std_logic_vector(7 downto 0);
      DEF_CNT_o           : out std_logic_vector(15 downto 0);
      EJ_CNT_o            : out std_logic_vector(15 downto 0);
      OVERUSAGE_o         : out std_logic_vector(63 downto 0);
      CH_NUM_o            : out std_logic_vector (5 downto 0));
  end component;

  component MEM_SYNC
    port (
      clka  : in  std_logic;
      wea   : in  std_logic_vector(0 downto 0);
      addra : in  std_logic_vector(8 downto 0);
      dina  : in  std_logic_vector(31 downto 0);
      clkb  : in  std_logic;
      addrb : in  std_logic_vector(8 downto 0);
      doutb : out std_logic_vector(31 downto 0));
  end component;

  component memdef
  end component;

  component PSEUDO_RANDOM_TEST
  end component;

  component SEND_SERIAL_DATA
    port (
      PACK_8BIT_0      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_1      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_2      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_3      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_4      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_5      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_6      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_7      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_8      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_9      : in  std_logic_vector(7 downto 0);
      PACK_8BIT_10     : in  std_logic_vector(7 downto 0);
      PACK_8BIT_11     : in  std_logic_vector(7 downto 0);
      PACK_8BIT_12     : in  std_logic_vector(7 downto 0);
      PACK_8BIT_13     : in  std_logic_vector(7 downto 0);
      PACK_8BIT_14     : in  std_logic_vector(7 downto 0);
      PACKET_SENT_i    : in  std_logic;
      CLK_i            : in  std_logic;
      RST_i            : in  std_logic;
      SEND_8BIT_DATA_o : out std_logic_vector (7 downto 0);
      SEND_o           : out std_logic);
  end component;

  component SERIAL_TX
  end component;

  component SORT_CASE
    port (
      SORT_CASE_i : in  std_logic_vector (6 downto 0);
      RCONT_i     : in  std_logic_vector (7 downto 0);
      INX_i       : in  std_logic_vector (2 downto 0);
      RESET_i     : in  std_logic;
      SHOT_X_o    : out std_logic_vector (2 downto 0);
      WCONT_o     : out std_logic_vector (7 downto 0));
  end component;

  component STATUS_SENDER
    port (
      PACK_8BIT_0  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_1  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_2  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_3  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_4  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_5  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_6  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_7  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_8  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_9  : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_10 : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_11 : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_12 : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_13 : in  STD_LOGIC_VECTOR(7 downto 0);
      PACK_8BIT_14 : in  STD_LOGIC_VECTOR(7 downto 0);
      CLK_i        : in  STD_LOGIC;
      RST_i        : in  STD_LOGIC;
      SEND_o       : out STD_LOGIC;
      TX_o         : out STD_LOGIC);
  end component;

  component TB_CORR_AGT
  end component;

  component TB_EJECTORS_DATA_SENDER
  end component;

  component TB_FLOOR_GEN
  end component;

  component TB_MAIN_RESET
  end component;

  component TB_MAX_CH_MEAN
  end component;

  component TB_MEAN_16K
  end component;

  component TB_MEAN_256
  end component;

  component TB_MEAN_GAIN_TABLE
  end component;

  component TB_MEM_PIXVAL
  end component;

  component TB_MEM_ROMPIXVAL
  end component;

  component TB_TESTEJET
  end component;

  component TB_WRAPPER_EJET
  end component;

  component TESTEJET
  end component;

  component WRAPPER
    port (
      LENGTH_i             : in  std_logic_vector (191 downto 0);
      TEMPO_ESTATISTICA_i  : in  std_logic_vector(2 downto 0);
      HAS_GRAIN_i          : in  std_logic_vector(63 downto 0);
      INT_CH_REQ_i         : in  std_logic_vector (5 downto 0);
      RETRIGGER_ON_i       : in  std_logic;
      A_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      OVERUSAGE_CLR_A_i    : in  std_logic;
      OVERUSAGE_CLR_B_i    : in  std_logic;
      C18MHZ_i             : in  std_logic;
      C3KHZ_i              : in  std_logic;
      C56MHz_i             : in  std_logic;
      RST_i                : in  std_logic;
      PROBE_o              : out std_logic_vector(15 downto 0);
      EJ_CNT_o             : out std_logic_vector (15 downto 0);
      MAX_ACTIVE_COUNTER_o : out std_logic_vector (15 downto 0);
      OVERUSAGE_o          : out std_logic_vector(63 downto 0);
      CH_OUT_o             : out std_logic_vector (63 downto 0));
  end component;

  component WRAPPER_EJET
    port (
      LENGTH_BUFF_i        : in  std_logic_vector (191 downto 0);
      TEMPO_ESTATISTICA_i  : in  std_logic_vector(2 downto 0);
      HAS_GRAIN_i          : in  std_logic_vector(63 downto 0);
      INT_CH_REQ_i         : in  std_logic_vector (5 downto 0);
      RETRIGGER_ON_i       : in  std_logic;
      A_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      OVERUSAGE_CLR_A_i    : in  std_logic;
      OVERUSAGE_CLR_B_i    : in  std_logic;
      C18MHZ_i             : in  std_logic;
      C3KHZ_i              : in  std_logic;
      RST_i                : in  std_logic;
      PROBE_o              : out std_logic_vector (15 downto 0);
      EJ_CNT_o             : out std_logic_vector (15 downto 0);
      MAX_ACTIVE_COUNTER_o : out std_logic_vector (15 downto 0);
      CH_NUM_o             : out std_logic_vector (5 downto 0);
      OVERUSAGE_o          : out std_logic_vector(63 downto 0);
      CH_OUT_o             : out std_logic_vector (63 downto 0));
  end component;

  component WRAPPER_TOP
    port (
      CH_IN00_i            : in  std_logic_vector (2 downto 0);
      CH_IN01_i            : in  std_logic_vector (2 downto 0);
      CH_IN02_i            : in  std_logic_vector (2 downto 0);
      CH_IN03_i            : in  std_logic_vector (2 downto 0);
      CH_IN04_i            : in  std_logic_vector (2 downto 0);
      CH_IN05_i            : in  std_logic_vector (2 downto 0);
      CH_IN06_i            : in  std_logic_vector (2 downto 0);
      CH_IN07_i            : in  std_logic_vector (2 downto 0);
      CH_IN08_i            : in  std_logic_vector (2 downto 0);
      CH_IN09_i            : in  std_logic_vector (2 downto 0);
      CH_IN10_i            : in  std_logic_vector (2 downto 0);
      CH_IN11_i            : in  std_logic_vector (2 downto 0);
      CH_IN12_i            : in  std_logic_vector (2 downto 0);
      CH_IN13_i            : in  std_logic_vector (2 downto 0);
      CH_IN14_i            : in  std_logic_vector (2 downto 0);
      CH_IN15_i            : in  std_logic_vector (2 downto 0);
      CH_IN16_i            : in  std_logic_vector (2 downto 0);
      CH_IN17_i            : in  std_logic_vector (2 downto 0);
      CH_IN18_i            : in  std_logic_vector (2 downto 0);
      CH_IN19_i            : in  std_logic_vector (2 downto 0);
      CH_IN20_i            : in  std_logic_vector (2 downto 0);
      CH_IN21_i            : in  std_logic_vector (2 downto 0);
      CH_IN22_i            : in  std_logic_vector (2 downto 0);
      CH_IN23_i            : in  std_logic_vector (2 downto 0);
      CH_IN24_i            : in  std_logic_vector (2 downto 0);
      CH_IN25_i            : in  std_logic_vector (2 downto 0);
      CH_IN26_i            : in  std_logic_vector (2 downto 0);
      CH_IN27_i            : in  std_logic_vector (2 downto 0);
      CH_IN28_i            : in  std_logic_vector (2 downto 0);
      CH_IN29_i            : in  std_logic_vector (2 downto 0);
      CH_IN30_i            : in  std_logic_vector (2 downto 0);
      CH_IN31_i            : in  std_logic_vector (2 downto 0);
      CH_IN32_i            : in  std_logic_vector (2 downto 0);
      CH_IN33_i            : in  std_logic_vector (2 downto 0);
      CH_IN34_i            : in  std_logic_vector (2 downto 0);
      CH_IN35_i            : in  std_logic_vector (2 downto 0);
      CH_IN36_i            : in  std_logic_vector (2 downto 0);
      CH_IN37_i            : in  std_logic_vector (2 downto 0);
      CH_IN38_i            : in  std_logic_vector (2 downto 0);
      CH_IN39_i            : in  std_logic_vector (2 downto 0);
      CH_IN40_i            : in  std_logic_vector (2 downto 0);
      CH_IN41_i            : in  std_logic_vector (2 downto 0);
      CH_IN42_i            : in  std_logic_vector (2 downto 0);
      CH_IN43_i            : in  std_logic_vector (2 downto 0);
      CH_IN44_i            : in  std_logic_vector (2 downto 0);
      CH_IN45_i            : in  std_logic_vector (2 downto 0);
      CH_IN46_i            : in  std_logic_vector (2 downto 0);
      CH_IN47_i            : in  std_logic_vector (2 downto 0);
      CH_IN48_i            : in  std_logic_vector (2 downto 0);
      CH_IN49_i            : in  std_logic_vector (2 downto 0);
      CH_IN50_i            : in  std_logic_vector (2 downto 0);
      CH_IN51_i            : in  std_logic_vector (2 downto 0);
      CH_IN52_i            : in  std_logic_vector (2 downto 0);
      CH_IN53_i            : in  std_logic_vector (2 downto 0);
      CH_IN54_i            : in  std_logic_vector (2 downto 0);
      CH_IN55_i            : in  std_logic_vector (2 downto 0);
      CH_IN56_i            : in  std_logic_vector (2 downto 0);
      CH_IN57_i            : in  std_logic_vector (2 downto 0);
      CH_IN58_i            : in  std_logic_vector (2 downto 0);
      CH_IN59_i            : in  std_logic_vector (2 downto 0);
      CH_IN60_i            : in  std_logic_vector (2 downto 0);
      CH_IN61_i            : in  std_logic_vector (2 downto 0);
      CH_IN62_i            : in  std_logic_vector (2 downto 0);
      CH_IN63_i            : in  std_logic_vector (2 downto 0);
      SYNC1_i              : in  std_logic_vector (8 downto 0);
      SYNC2_i              : in  std_logic_vector (8 downto 0);
      RETRIGGER_ON_i       : in  std_logic;
      TEMPO_ESTATISTICA_i  : in  std_logic_vector(2 downto 0);
      HAS_GRAIN_i          : in  std_logic_vector(63 downto 0);
      INT_CH_REQ_i         : in  std_logic_vector (5 downto 0);
      A_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      A_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE1_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE2_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE3_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE4_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE5_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE6_i          : in  std_logic_vector (9 downto 0);
      B_ELIPSE7_i          : in  std_logic_vector (9 downto 0);
      OVERUSAGE_CLR_A_i    : in  std_logic;
      OVERUSAGE_CLR_B_i    : in  std_logic;
      C20US_i              : in  std_logic;
      C56MHz_i             : in  std_logic;
      C18MHZ_i             : in  std_logic;
      C3KHZ_i              : in  std_logic;
      RST_i                : in  std_logic;
      PROBE_o              : out std_logic_vector(15 downto 0);
      EJ_CNT_o             : out std_logic_vector (15 downto 0);
      MAX_ACTIVE_COUNTER_o : out std_logic_vector (15 downto 0);
      OVERUSAGE_o          : out std_logic_vector(63 downto 0);
      CH_EJ_o              : out std_logic_vector (63 downto 0));
  end component;

end components;

-------------------------------------------------------------------------------
